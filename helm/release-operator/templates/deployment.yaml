apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name" . }}
  namespace: {{ include "resource.default.namespace" . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "labels.common" . | nindent 8 }}
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - {{ include "name" . | quote }}
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name | quote }}  
              topologyKey: kubernetes.io/hostname
            weight: 100
      volumes:
      - name: {{ include "resource.configMap.name" . }}
        configMap:
          name:  {{ include "resource.configMap.name" . }}
          items:
          - key: config.yml
            path: config.yml
      serviceAccountName: {{ include "resource.default.name" . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
        {{- with .Values.podSecurityContext }}
            {{- . | toYaml | nindent 8 }}
          {{- end }}
      containers:
      - name: release-operator
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
        - daemon
        - --config.dirs=/var/run/release-operator/configmap/
        - --config.files=config
        volumeMounts:
        - name: {{ include "resource.configMap.name" . }}
          mountPath: /var/run/release-operator/configmap/
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          timeoutSeconds: 1
        securityContext:
          {{- with .Values.securityContext }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        resources:
          requests:
            cpu: 100m
            memory: 150Mi
          limits:
            cpu: 100m
            memory: 150Mi
