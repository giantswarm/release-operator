e2eTest: &e2eTest
    machine: true
    working_directory: /home/circleci/.go_workspace/src/github.com/giantswarm/release-operator
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run: |
        wget -q $(curl -sS https://api.github.com/repos/giantswarm/e2e-harness/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./e2e-harness

    - run: ./e2e-harness localkube

    - run: ./e2e-harness setup --remote=false

    - run: ./e2e-harness test --test-dir=${E2E_TEST_DIR}

    - store_artifacts:
        path: .e2e-harness/workdir/logs
        destination: logs

    - run:
        name: Finish with cleanup, no matter if the test succeeded or not
        command: ./e2e-harness teardown
        when: always

version: 2.1

orbs:
  app-catalog:
    commands:
      checkout-command:
        parameters:
          repository:
            type: "string"
          token:
            type: "string"
        steps:
          - run:
              name: "Checkout App Catalog repository to the .app-catalog directory"
              command: |
                  set -o errexit
                  set -o nounset
                  set -o pipefail

                  echo_green() {
                      echo -e "\e[32m${1}"
                  }
                  echo_red() {
                      echo -e "\e[31m${1}"
                  }
                  echo_yellow() {
                      echo -e "\e[33m${1}"
                  }

                  readonly repo=<<parameters.repository>>
                  readonly github_access_token=<<parameters.token>>

                  git pull -q "https://${github_access_token}@github.com/giantswarm/${repo}.git" master .app-catalog
                  echo_green "ok: catalog giantswarm/${repo} checkedout to .app-catalog directory"

                  echo "ls .app-catalog"
                  ls .app-catalog

    executors:
      my-executor:
        docker:
          - image: circleci/golang:1.12.4

    jobs:
      checkout:
        executor: my-executor
        parameters:
          repository:
            description: "Name of the Github repository inside giantswarm organization hosting the App Catalog."
            type: "string"
          token:
            description: "Github access token with read/write permissions to the repository hosting the App Catalog."
            type: "string"
        steps:
          - checkout-command:
              repository: <<parameters.repository>>
              token: <<parametes.token>>


jobs:
  build:
    machine: true
    steps:
    - checkout

    - run: |
        wget -q $(curl -sS -H "Authorization: token $RELEASE_TOKEN" https://api.github.com/repos/giantswarm/architect/releases/latest | grep browser_download_url | head -n 1 | cut -d '"' -f 4)
        chmod +x ./architect
        ./architect version
    - run: ./architect build
    - store_test_results:
        path: /tmp/results
    - persist_to_workspace:
        root: .
        paths:
          - ./release-operator
          - ./architect

  e2eTestBasic:
    environment:
      E2E_TEST_DIR: "integration/test/basic"
    <<: *e2eTest

  e2eTestMultiReleaseHandling:
    environment:
      E2E_TEST_DIR: "integration/test/multireleasehandling"
    <<: *e2eTest

  e2eTestReleaseHandling:
    environment:
      E2E_TEST_DIR: "integration/test/releasehandling"
    <<: *e2eTest

  e2eTestReleaseCycle:
    environment:
      E2E_TEST_DIR: "integration/test/releasecycle"
    <<: *e2eTest

  deploy:
    machine: true
    steps:
    - checkout

    - attach_workspace:
        at: .

    - run: ./architect deploy


workflows:
  build-and-e2e-test:
    jobs:
      - app-catalog/checkout:
          name: "app-catalog-checkout"
          repository: "magic-catalog"
          token: ${GITHUB_BOT_TOKEN}

      - build

      - e2eTestBasic:
          requires:
          - build
      - e2eTestMultiReleaseHandling:
          requires:
          - build
      - e2eTestReleaseHandling:
          requires:
          - build
      - e2eTestReleaseCycle:
          requires:
          - build

      - deploy:
          filters:
            branches:
              only: master
          requires:
          - e2eTestBasic
          - e2eTestMultiReleaseHandling
          - e2eTestReleaseHandling
          - e2eTestReleaseCycle
